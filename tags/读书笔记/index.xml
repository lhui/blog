<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>读书笔记 on lihui</title>
    <link>https://lihui.net/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in 读书笔记 on lihui</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 16 Jan 2021 15:20:31 +0000</lastBuildDate>
    <atom:link href="https://lihui.net/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[人文书籍] 把时间当作朋友</title>
      <link>https://lihui.net/treat-time-as-friend.html</link>
      <pubDate>Sat, 16 Jan 2021 15:20:31 +0000</pubDate>
      <guid>https://lihui.net/treat-time-as-friend.html</guid>
      <description>前言 这本书主要是在地铁上听完的, 地铁上没有事情做, 就顺便的将这本书听完了, 作者是李笑来, 也是一位教育者,看这本书很是偶然, 听完这本书之后确实有所思考, 便将其写下.&#xA;首先在前言中写下一个常见的现象, 人们总是看到和认同自己想看到和想认同的东西, 不会去看到和认同自己不想看到和不想认同的东西，而作为提升，我们必须去看那些我们不想看到和不想认同的东西里面是不是正确的，千万不能掉入自我拘束的漩涡。&#xA;本文的很多内容均是直接使用书上的内容或者部分使用书上的内容. 在前面首先声明, 作者写的文章非常的好,真心推荐, 详细的读一读.&#xA;内容与思考 现在比较流行时间管理这一名词,本书中强调,其实管理的不是时间,而是我们自己, 对于作为观测者的我们,很难去左右时间的流失,时间不断地往前走, 而我们对于时间的流逝几乎无能为力.&#xA;也有很多情况, 我们所做的事情是不是假勤奋或者说既勤奋又懒惰, 只是为了一个目的, 尽快的完成最终的目标, 去做一些生硬的事情, 其实做的这些事情都具有不可延展性, 长此以往会造成很多的问题, 我们只知道如何直接的解决问题, 而不知道如何提炼学习的方法, 这个例子也在书中有所体现, &amp;ldquo;老师 我把你的作为都背下来,在考场上默写一篇,会被判为雷同吗? &amp;ldquo;, 185篇作文都被背下来, 当然要算勤奋了, 但是如果直接照抄的话, 也是很懒惰啊, 如果我们只会机械式的记忆东西, 然后再机械式地背诵出来, 那我们和机器有何区别呢?&#xA;上述情况出现的原因其实很大程度上在于&amp;quot;时间压力&amp;rdquo;, 我们总会认为时间过得太快了, 距离DeadLine的时间越来越短, 这时候就有时间压力,比如&amp;quot;没时间了&amp;quot;或者&amp;quot;时间不够了&amp;quot;的恐慌, 使得我们超乎寻常的勤奋和虚假的&amp;quot;勤奋&amp;rdquo;, 而且在某种程度上早就了&amp;quot;DeadLine是第一生产力&amp;quot; 这种概念, 为何DeadLine是第一生产力呢, 以前的时间去哪里了呢? 这就涉及到了时间和任务的高效利用, 在任务的四象限中也有所谈及,将任务分为&amp;quot;重要的&amp;quot;和&amp;quot;不重要的&amp;quot;的, 再把任务分为“紧急的”和“不紧急的”，最终选择“重要的且紧急”的事情来执行.&#xA;看起来确实很有道理, 但是执行起来的确实很难, 很难去判定那件事情的重要和紧急的程度, 需要我们首先对于问题进行划分, 尤其是出现交叉任务的时候, 时间紧的时候, 我们就会发现事情很多都是很紧急且很重要, 这就有了很多很多的问题,因此书中表明, 我们管理的不是时间,我们也无法管理时间, 我们可以管理的是我们自己,虽然这和我们已有的观念想左, 但是有可能和我们相左的观点是正确的, 人们很难接受与已有的只是和经验想做的信息和观念, 因为一个人已有的是指和观念都是经过反复筛选的, 尽管有很多知识和关键是被灌输的, 于此同时人们也更愿意相信自己拥有一定的判断力, 不会被轻易糊弄, 即使是一些“想当然”的观念，人们也倾向于认为那是“思考过后的结论”。因此引出了本书的主要论点: 时间是不可能被管理的。必须开启心智，看清楚，想明白：问题出在我们自己身上。而我们所面临的问题，与时间、管理或时间管理都没有多大的关系。解决问题的核心思想只有一个——一切都靠积累。深信积累的力量，时间就是你的朋友，否则，它就是你的敌人。&#xA;##　醒悟</description>
    </item>
    <item>
      <title>[技术书籍]JSON必知必会</title>
      <link>https://lihui.net/book-intoduction-to-json.html</link>
      <pubDate>Tue, 12 Jan 2021 15:59:34 +0000</pubDate>
      <guid>https://lihui.net/book-intoduction-to-json.html</guid>
      <description>引言 2021年1月12号 看完了 2021年的第一本书, 也是第一本技术书籍, 这本书挺简单的, 没有记录花了多长时间读完, 也就是2-3个小时吧, 11号晚上和12号晚上两个晚上读完的 对了 写这篇文章的时候 是2021-01-12 22:24.&#xA;简短的总结一下这篇文章: &amp;ldquo;这本书介绍了 JSON是什么,可以用JSON做什么和那些别有用心的人会用它做什么&amp;rdquo;&#xA;JSON是什么: JSON全称为 JavaScript Object Notation(JavaScript 对象表示法),虽然带有JavaScript的字样,但是和JavaScript并没有强绑定,JSON是一种信息的表示法,只不过其中的类型定义有借鉴JavaScript的地方. 简而言之 JSON是一种数据的表示方法,一般用来传输交互数据,保存配置文件等.&#xA;可以用JSON做什么: JSON一般使用来用于传输数据和保存配置信息.&#xA;别有用心的人会拿来做什么: 其实这一点也是我们进行安全防范的地方, 本书中讲述的主要是和数据传输相关的跨站请求伪造CSRF(cross-site request forgery，读作sea-surf) [利用新人机制进行攻击] 和注入攻击(通过像网站注入恶意代码来实现) 比如苦熬站脚本攻击(Cross-site scripting,XSS) 在使用JSON 时常见的安全漏洞通常发生在JavaScript 从服务器获取到一段JSON字符串并将其转化为JavaScript 对象时。此时如果将相应转换后的代码装载到内存中,再运行,将会产生一项不到的麻烦,毕竟谁都不知道被修改过的数据是好还是坏.&#xA;本书的主要内容 什么是JSON JSON是一种数据交换格式,JSON独立于编程语言,JSON基于JavaScript对象字面量表示法,JSON表达数据的方式对通用的编程概念都很友好.&#xA;表示法是指一个用于表示诸如数字或单词等数据的字符系统,比如用象形文字表示数量和什么动物&#xA;JSON的格式 这个是重点 JSON是什么格式的,什么格式正确,什么格式重要很重要. 首先JSON是键值对(key-value), 且键值对的键需要用&amp;quot;&amp;ldquo;引起来,值可以遵循数据类型的形式,比&#xA;JSON的键(key)中的&amp;quot;&amp;ldquo;中可以包括 &amp;rsquo; (单引号)比如 &amp;quot;Lindsay&#39;s anmail&amp;quot;:&amp;quot;cat&amp;quot; 便是合法的, 可以使用的扩展名 .json&#xA;如下面的示例&#xA;鞋子的示例 从上大小依次是 字符串, 字符串, 数值型, 布尔型&#xA;书中提到了一个比较简单解释JSON中开始结束的示例如下:&#xA;• {（左花括号）指“开始读取对象”&#xA;• }（右花括号）指“结束读取对象”&#xA;• [（左方括号）指“开始读取数组”</description>
    </item>
  </channel>
</rss>
