<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kanban on lihui</title>
    <link>https://lihui.net/tags/kanban/</link>
    <description>Recent content in Kanban on lihui</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 02 Nov 2020 12:08:33 +0000</lastBuildDate><atom:link href="https://lihui.net/tags/kanban/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用Kanban工作的第一天</title>
      <link>https://lihui.net/one-kanban-day.html</link>
      <pubDate>Mon, 02 Nov 2020 12:08:33 +0000</pubDate>
      
      <guid>https://lihui.net/one-kanban-day.html</guid>
      <description>Kanban是丰田生产模式中一个重要的概念，是为了达到及时生产方式控制现场生产流程的工具。
在这里我记录一下我自己使用Kanban的感受，使用Kanban的第一天，我任务我的工作量和成效还是比较好的，先抛开Kanban的定义方式，写一些我的感想，而后再详细的记录一下Kanban本来的宗旨，我觉得吧，融合后的，适合自己的才是最好的。
使用看板的第一天，感觉和GTD是一样的思想，放空大脑，专注当下，将大脑中的焦虑的部分和以后要进行的部分进行转移，转移到Kanban中，这种方式确实比较不错，将没有逻辑的各个事物进行输出，专注于需要逻辑进行的事物，不得不说，确实这种方式很棒。
我是一个开发人员，或者说是一个创造者，毕竟软件开发和创造新的事物是一样的，充满了新奇和兴趣，而且作为一个创造者，很难去容忍自己的产品会有不好的地方。今天也是我第一次发现，如果代码写的不好的话，自己都不想发版。
恰好我是一名开发者，我的Kanban是分为： BackLog,Waiting,TODO,Doing,Review+Test,Waiting publish,Regression Testing,Finish 这些部分，也就是可以说是，项目需求积压，等待其他人的清单，要做的（此时已经进入排期，已经确定要做，马上要执行的），正在做的，代码复查和测试，等待发版，回归测试，结束的这些部分，明显将所有的步骤进行细分开来，将没有逻辑的复杂的，需要记忆的事物进行整理话，细分化。
其实，我觉得只要是思路可以清晰的，无论是什么样划分，只要是适合自己的就可以。
下面我结合一下Kanban的初衷说一下我的理解(查资料中。。。
Kanban的最初是由丰田公司发明的（1940年，80年过去了。。。），Kanban的卡片并不是作为提高生产量的信号，二十用用户记录生产和标记生产过程，对于Kanban来说，可以使用便利贴等实体看板卡或者虚拟的看板卡（比如我现在这正在使用的Trello(还是比较推荐的)），再软件开发的过程中，采用虚拟Kanban系统来限制在制品(不同的地方的翻译不同，大约和work in progress (WIP)一个意思，就是正在进行的工作，好像有一种翻译是半成品，也可以说的过去)。
Kanban的原则：从你现在的任务开始，同意追求渐进式进化，最受当前的流程，任务，职责，职位， 各级领导。
Kanban的五个核心实践：可视化，限制在制品，管理流程，使过程策略明确化，采用模型来识别改进系统的机会。
Kanban是实现敏捷开发的一种流行的方式，敏捷开发也是软件开发的一个重要的话题。
引用：
  https://zh.wikipedia.org/wiki/%E7%9C%8B%E6%9D%BF_(%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91)  https://www.atlassian.com/agile/kanban  </description>
    </item>
    
  </channel>
</rss>
