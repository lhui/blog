<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Springboot on lihui</title>
    <link>https://lihui.net/tags/springboot/</link>
    <description>Recent content in Springboot on lihui</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 02 Jan 2022 15:56:05 +0000</lastBuildDate>
    <atom:link href="https://lihui.net/tags/springboot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[SpringBoot 指南] 连接 mysql 数据库并进行增删改查测试</title>
      <link>https://lihui.net/springboot-start-mysql.html</link>
      <pubDate>Sun, 02 Jan 2022 15:56:05 +0000</pubDate>
      <guid>https://lihui.net/springboot-start-mysql.html</guid>
      <description>落库是软件开发中的重要的事情，软件接受完成请求后，对请求的结果进行落入输入库是一件很重要的事情，而本篇文章想写出的内容就是 Springboot 连接本地的数据库的使用方案，本章文章也是入门的文章，因此篇幅可能不大。&#xA;本篇文章的主要内容有哪些呢？ 连接数据库主要分为&#xA;启动数据库 设置依赖 连接数据库并测试 增删改查基本功能 因此文章分为下面的三部分&#xA;1. 启动数据库 本文章为了演示比较简便采用的是 docker 创建的数据库&#xA;Docker 安装很容易安装，此处不再赘述 Docker 命令如何使用将单独写出 本文章只涉及几个日常命令 docker run , docker ps&#xA;命令如下:&#xA;命令释义：&#xA;使用 docker ps 查看容器状态&#xA;使用数据库连接工具连接数据库，并创建数据库 person 和数据表 person&#xA;建表语句&#xA;2. 添加依赖并设置连接信息 2.1 添加依赖 在 build.gradle 中添加如下依赖&#xA;本文采用的是最新的依赖，如果企业使用，推荐使用稳定版本&#xA;所在位置如下:&#xA;点击右上角小象标志刷新依赖&#xA;2.2 配置连接信息 在 resources 目录下添加 application.yml 文件并添加如下配置&#xA;3. 测试连接数据库并测试业务逻辑 3.1 查询数据库测试 代码依次如下:&#xA;Person.java&#xA;PersonRepository.java&#xA;PersonService.java&#xA;PersonController.java&#xA;3.2 测试联通 3.2.1 启动时检测 3.2.2 代码检测 可以看到是返回空数组&#xA;我们在数据库中插入数据</description>
    </item>
    <item>
      <title>[SpringBoot 指南] 如何开始 Springboot 之旅 实现自己第一个接口</title>
      <link>https://lihui.net/springboot-create-first-api.html</link>
      <pubDate>Sat, 01 Jan 2022 15:29:12 +0000</pubDate>
      <guid>https://lihui.net/springboot-create-first-api.html</guid>
      <description>书写时间 39m59s&#xA;预计发布时间 2022-01-01&#xA;这篇文章是 springboot 系列的第一篇文章，如何从零开始学习 Springboot.&#xA;我认为学习技术，追寻技术的本质没有任何问题，但是在上手技术的时候可能不需要了解太多的技术细节，首先了解如何使用，而后再想办法如何优化也不乏为一条快速学习和实践的道路。&#xA;本篇文章的主要思路是，通过实践最简单的 springboot 的项目，实现我们的第一个接口来叩响 Springboot 学习之门。&#xA;本章节分为两个部分 新建项目 和 书写第一个接口&#xA;新建项目 本篇文章采用 IDEA 创建 springboot 项目, IDEA 开发 Spring 项目有很多的优点，比如代码补全，代码优化，环境内置，还有很多的插件系统，可以大幅度地提高效率，推荐使用 IDEA 进行开发&#xA;1. 打开 IDEA 新建项目 2. 选择建立 Springboot 项目并填写项目信息 其中英文名称释义&#xA;Name: 项目名称&#xA;Location 代码位置&#xA;Type: 这里指的是项目的构建方式 选择 Maven 和 Gradle 在初期体验不到不同，此处我选择的是 Gradle&#xA;Group: 可以理解为项目组的名称，一般为域名的反写 比如域名是 exmaple.com 则 Group 的数值为 com.example&#xA;Project SDK: 这个很好理解 这个是软件开发的环境&#xA;Packaging : 打包的方式， Jar 与 War 的区别是 Jar 打包了运行环境， 直接 java -jar project.</description>
    </item>
  </channel>
</rss>
