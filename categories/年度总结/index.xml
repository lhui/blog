<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>年度总结 on lihui</title>
    <link>https://lihui.net/categories/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</link>
    <description>Recent content in 年度总结 on lihui</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 31 Dec 2020 03:59:50 +0000</lastBuildDate>
    <atom:link href="https://lihui.net/categories/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2020年年终总结</title>
      <link>https://lihui.net/2020-annual-summary.html</link>
      <pubDate>Thu, 31 Dec 2020 03:59:50 +0000</pubDate>
      <guid>https://lihui.net/2020-annual-summary.html</guid>
      <description>时光荏苒,转眼间我从一个学生转换成为一个社会的个体,参与工作的实际开发中,时间如流水般细细流淌,在这一年中冲刷了很多很多的过往与思考,值此新年之际,总结上一年的思考,也为2021年开篇.&#xA;2020年的世界真的是一个黑天鹅,灰犀牛遍地的一年,种种不常见的现象也变地丛生, 现在的我居家办公,用原来通勤的时间写下2020年的年度总结,2020年瘟疫持续一整年,社会百态丛生,中美贸易不断持续升温,大量线下服务类行业遭受到毁灭性打击,还有很多很多其他糟糕的事情,2020年真的是人类历史上很糟糕或者说最糟糕的一年.希望2021年一切可以恢复正常,向着正确的方向航行.&#xA;虽然大趋势是不太好的,但是,对于个人来说也有很多需要纪念的事物,在此写下.&#xA;2020年上半年完成了我的第一篇论文,感到写论文真的是需要很多思考的,从选题的调研,到题目的分析,思考,以及模型的训练,提取,回归,论文的编撰,更新,再更新,从查重的心惊胆战到提交完成的释然,不得不说,这一一抹难忘的光彩,老师的悉心指点,一切还历历在目.往事的一切也还历历在目.&#xA;2020年的下半年开始正式加入社会,经历了找房,租房,参加工作的流程,参与实际项目的开发维护,一点点的进入到深入的开发过程中,每一个新学习到的知识都会感到兴奋,无论是Java的学习到SpringBoot的学习还是前端Vue的学习,无时无刻都感到兴奋和高兴,沉浸在知识的海洋中,真的是一个让人感到兴奋的事情.&#xA;开发有时候会变得僵硬,防御式编程有时候会对代码造成很大的冲击,但是对于系统的稳定性和安全性都是有大的提高,这是可以感到舒适的地方. 想到这里我就想起了某个公司的sologen: 不需要用户思考. 这一点我也深感认同, 思考这个事情不应该交给用户, 而要交给其他的人,比如产品,设计,开发等等,了解用户痛点,切中用户需求,而且很多情况下,用户对于自己的需求并不清晰.&#xA;梳理一下今年看的书籍,今年读了不少书籍, 确实也从中得到了很多很多的知识和见解和世界观的探寻,也有很多感触,,第一步梳理一下阅读过的书籍&#xA;&amp;laquo;软技能代码之外的生存指南&amp;raquo; John Z. Sonmez &amp;laquo;增长黑客&amp;raquo; Sean Ellis, Morgan Brown &amp;laquo;向上生长&amp;raquo; 九边 &amp;laquo;黑客与画家&amp;raquo; Paul Graham &amp;laquo;京东敏捷实践指南&amp;raquo; 赵卫 王立杰 &amp;laquo;洛克菲勒留给儿子的38封信&amp;raquo; John Davison Rockefeller &amp;laquo;软技能代码之外的求生指南&amp;raquo;中从软件工程师的角度出发,详细分析了 作为一个个体我们应该如何去思考,去准备,去选择,去定义,以及成为怎样的人,还有其他的例如:将专业的事情交给专业的人去做, 学会自我营销,以及如何学习如何提高生产力,如何理财,健身,以及精神对一个人的作用和如何保持乐观的精神,这本书不得不说对个人的成长来说是一本好书, 很多时候我们很容易陷入当下的境地,即我是我正在做的工作,很难去提纲挈领的从全局的角度去看待问题,我们要解决什么问题, 然后再说方法的问题. 这一点也是我这一年来感触颇深的地方.&#xA;&amp;laquo;增长黑客&amp;raquo; 这本书也是一部鼎鼎大名的巨著, Sean Ellis Morgan Brown 作为新生代(也可以称作互联网时代)的营销学领导者, 这批人的对于互联网时代的用户的增长起了领航者的作用, 通过用户的行为习惯为用户推荐量身订做的产品,从用户的获取到转化,激活,盈利 都有很详细的介绍,并且有相应的方法来解决,实在是不可多得的一本经典的图书.&#xA;&amp;laquo;向上生长&amp;raquo; 这本书是我的好友推荐的,这本书阅读起来比较简单,易于理解,这里面有一句比较重要也是比较通俗的话语,质变需要量变的积累,没有足够多的量变,很难去达到质变,就像写博客一样,第一篇可能很难写,但是坚持下去,第10篇一定会比第一篇有进步,第一百篇肯定会比第一篇好得多,第一千篇,无论是思想还是思路,都会有很多的思考,这个博客也会一直写作下去,一直总结,一直思考.且通过简单的例子来讲述学习是在熵减的过程, 自然界的一切事物都是向着熵增的方向进行的,即朝着混乱无序的状态进行的,只有输入才是熵减的过程,才会让一切变得有序,变得稳定,而且需要在挑战区不断的投入时间,不断地扩大边界,与此同时要把所有基础的事情做好,而且要目光长远,不能只想要即时利益.&#xA;&amp;laquo;黑客与画家&amp;raquo; 这本书真的是非常非常出名,我很喜欢作者Paul的很多产品,比如HackerNews 可以说HN在计算机界有风向标一类的作用,黑客与画家这本书介绍了黑客的定义: 好玩 高智商 探索精神,这些要点缺一不可,详细地讲述了黑客与画家的相似之处, 不能盼望现有一个完美的规格设计,然后再动手编程,这样想是不现实的,如果你预先承认规格设计是不完美的,再百年城的时候,就可以根据当场修改规格,最终会有一个更好的成果, &amp;ldquo;过早优化&amp;quot;与&amp;quot;过早设计&amp;quot;都有相应的危险性.优秀的事物都要求对美的狂热的追求,无论外部还是内部,比如软件的外观和内部代码都会是优美的. 对于软件开发者来讲,不应该让用户做任何的多余的事情,代替用户思考,使得用户不需要思考就可以达到自己想要的结果.等等有很多的有意义的东西值得深入阅读.&#xA;&amp;laquo;京东敏捷实践指南&amp;raquo; 敏捷开发是当代的较为流行的软件开发流程,快速响应,快速迭代, 每一个周期都要有成品,通过看板等工具实现团队内部的协作,以帮助各个成员都了解自己所做的事物,这种开发模式确实比较优秀,这本书讲述了为什么需要敏捷,敏捷是什么,如何进行敏捷转型,以及转型实例等等,做的都很细致,可以作为敏捷的阅读书籍,其实无论是公司还是个人都要学习敏捷,目标明确,及时相应,快速应对,快速迭代,无论是对于公司还是对于个体都是很重要的.&#xA;&amp;laquo;洛克菲勒留给儿子的38封信&amp;raquo; 这本书有很多很多优秀的地方,洛克菲勒家族作为久盛不衰的家族必然有值得我们学习的地方,洛克菲勒对于儿子的教导有关于个体的,也有关于运气的,以及工作的必要性,马上行动,要有竞争,等等很多提醒我们的要点,无论从个体还是从管理的角度都有很强的学习意义,全书通过洛克菲勒的例子量讲述一个伟人的发展史.&#xA;还有一些书没有在此出写出,等看完后再写出单独的文章来写读书笔记.&#xA;这一年让我最高兴的一件事是: 可以通过自己的努力, 独立承担起自己的重量.</description>
    </item>
  </channel>
</rss>
